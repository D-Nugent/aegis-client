@use "./variables" as *;

@mixin tablet {
    @media (min-width: $screen-tablet) {
        @content;
    };
};

@mixin desktop {
    @media (min-width: $screen-desktop) {
        @content;
    };
};

// Margin Mixins

// Example 1:
// input: @include margin()
// renders:
// At mobile: margin: .75rem 
// At tablet: margin: 1rem
// At desktop: margin: 1rem

// Example 2:
// input: @include margin(m,bottom,left)
// renders:
// At mobile: margin-bottom: .1rem; margin-left: 1rem
// At tablet: margin-bottom: 1.5rem; margin-left: 1.5rem
// At desktop: margin-bottom: 1.5rem; margin-left: 1.5rem

@mixin responsiveMargin($size: s,$directions...) {
    @if $size == 's' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $margin-mobile-s; 
            }
        } @else {
            margin: $margin-mobile-s;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $margin-tablet-s; 
                }
            } @else {
                margin: $margin-tablet-s;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $margin-desktop-s; 
                }
            } @else {
                margin: $margin-desktop-s;
            }
        }
    };

    @if $size == 'm' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $margin-mobile-m; 
            }
        } @else {
            margin: $margin-mobile-m;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $margin-tablet-m; 
                }
            } @else {
                margin: $margin-tablet-m;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $margin-desktop-m; 
                }
            } @else {
                margin: $margin-desktop-m;
            }
        }
    };

    @if $size == 'l' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $margin-mobile-l; 
            }
        } @else {
            margin: $margin-mobile-l;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $margin-tablet-l; 
                }
            } @else {
                margin: $margin-tablet-l;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $margin-desktop-l; 
                }
            } @else {
                margin: $margin-desktop-l;
            }
        }
    }
}

// Padding Mixins

@mixin responsivePadding($size: s,$directions...) {
    @if $size == 'xs' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $padding-mobile-xs; 
            }
        } @else {
            margin: $padding-mobile-xs;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-tablet-xs; 
                }
            } @else {
                margin: $padding-tablet-xs;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-desktop-xs; 
                }
            } @else {
                margin: $padding-desktop-xs;
            }
        }
    };

    @if $size == 's' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $padding-mobile-s; 
            }
        } @else {
            margin: $padding-mobile-s;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-tablet-s; 
                }
            } @else {
                margin: $padding-tablet-s;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-desktop-s; 
                }
            } @else {
                margin: $padding-desktop-s;
            }
        }
    };

    @if $size == 'm' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $padding-mobile-m; 
            }
        } @else {
            margin: $padding-mobile-m;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-tablet-m; 
                }
            } @else {
                margin: $padding-tablet-m;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-desktop-m; 
                }
            } @else {
                margin: $padding-desktop-m;
            }
        }
    };

    @if $size == 'l' {
        @if length($directions) != 0 {
            @for $i from 0 to length($directions) {
                margin-#{nth($directions, $i + 1)}: $padding-mobile-l; 
            }
        } @else {
            margin: $padding-mobile-l;
        }
        @include tablet {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-tablet-l; 
                }
            } @else {
                margin: $padding-tablet-l;
            }
        }
        @include desktop {
            @if length($directions) != 0 {
                @for $i from 0 to length($directions) {
                    margin-#{nth($directions, $i + 1)}: $padding-desktop-l; 
                }
            } @else {
                margin: $padding-desktop-l;
            }
        }
    }
}